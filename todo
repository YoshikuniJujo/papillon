**************************
* parser の表記/機能関係 *
**************************

* haskell の exp をちゃんとパースしよう
	まずは、type のところを Maybe Int とかができるようにしようかな
	(...) を許すようにしよう
	3 + 2 とか x : xs とかを可能にしよう
	Maybe Int とかも
	変数のパターンも
* +, ? の追加
* 式のなかで selection を使えるようにする
	_:head (_:some / _:other) :tail のような形

**************************
*  エラーメッセージ関係  *
**************************

* EOF の場合はコードはないが、not not match の場合にはどうか
	どれかが失敗するのではなく、あるまとまりのすべてが成功してしまうのが
	問題であることを考えると、そのまとまり全体を文字列化する必要がある
	これは可能だが、その優先度と手間について考える必要がある

* ParseError の field に error になったコードとそれについていたコメントをいれる
	コメントはとりあえず {-# "..." #-}  でいれることにしよう

* 読み込んでいた要素も取得したい
	今考えているのは ExpQ で dv_..., と d を帰しその後に組み立てる方法
	それよりも返し得るすべての型に対して、
	data TypeForError = TFEHoge Hoge | TFE... ... | ... | TFEChar (Token ...)
	のような型を作ったほうがいいかもしれない

**************************
*  リファクタリング関係  *
**************************

* 関数の名前について
	parser とかそういう名前は conflict するので、もっとちゃんとした名前にする
	...M という名前を使ったときにとくに問題がある
* parser の呼び出しかたの改善
* papillon command は何も取らなければ filter とする。
	また、papillon [Input] や papillon [Input] -o [Output] の形も使う。
	そのうちに papillon -h や papillon --help も。
	より使いやすく GetOpt を使ってみるのもいいかもしれない。
* module 構造について
	Papillon -+-> some
                  |
	papillon -+
	とすることで、Papillon が papillonStr 等を export せずにすむ。
	ただし、papillonStr を export するのが役立つ可能性もあるので考えること
* Text/Papillon/Parser.hs を git から外す
	これは papillon 自体がある程度安定してから、となるだろう。
* id is... 等の id をなくす
	左結合への変換の部分で ExpQ -> ExpQ ではなく (ExpQ -> ExpQ) -> ExpQ を
	使えばできる気がする
* UndecidableInstances が必要な部分について
	これを取ることが可能かどうか考える
* showPos は必要ないかもしれない
	あとで削除しよう

******************************
*  機能面における細かい修正  *
******************************

* {-# LANGUAGE ... #-} がないときにはそれを追加する
* source の見直し
	今の文法だと、source: SomeSource\n のようになっているが
	今後より複雑な文法を許容した場合において ';' で区切ったほうが良いかもしれない
* 非終端記号に大文字で始まるものも許すようにしようかな
* 左再帰の解決はどうしようかな
	pappy はこれにひどく時間がかかっていた
* ; を省略可能にしようかな
* papillonStr' 等を String 以外も取れるようにする
	StringLike とかかな

**************************
*  ドキュメント関係      *
**************************

* cabal に examples directory を追加する
* cabal の description をもうすこしましにする
* homepage に example をのせる
