* list, list1 の実装
	list :: PackratQ a -> PackratQ [a]
	list1 :: PackratQ a -> PackratQ [a]
	といった感じで、
	list = empty `or` list1
	list1 = one `next` list
	のような相互再帰を使おう
	で、これらはちゃんと DecQ にしなくてはならない
	もっと一般的な定義にしよう
	list, list1 :: MonadPlus m => m a -> m [a]
	のような感じ

* list, list1 を使っているときだけ書き出すようにする

* NameLeaf を type から data にする
	data NameLeaf = ... | ListLeaf NameLeaf | List1Leaf NameLeaf | OptLeaf ...

* nameleaf = ... / v:var ':' nameleaf '*' のような形にする

* list list1 の追加
	ss:_:some* のような書きかたで list を表現できるようにする
	ss:_:some+ だと list1 だ
	list と list1 は相互再帰できれいに書けるはずだ
	とりあえず Leaf を type から data にする必要がある

* ? の追加

* 式のなかで selection を使えるようにする
	_:head (_:some / _:other) :tail のような形
		
* 構文の変更
	パターンマッチの部分で複数の要素からなるものは () でくくることにしよう
	そうしないと Token _:some が Token (_:some) か (Token _):some
	かで曖昧になるから

* Pos を取れるようにする
	Token -> Pos -> Pos のようにする
	また showPos も必要か
	parse pos str とし Derivs にも pos を入れるところをつくろう
	そうするといろいろなところで、pos が利用できるようになる
	pos をもっと一般的に state として使うというアイデアもあるが
	それはとりあえず error のあった位置を表示するという当初の
	目的を実現してから考えよう

* Either String ではなく Either ParseError とする
	type ParseError pos または data ParseError pos としようかな

* haskell の exp をちゃんとパースしよう
	まずは、type のところを Maybe Int とかができるようにしようかな
	(...) を許すようにしよう
	3 + 2 とか x : xs とかを可能にしよう
	Maybe Int とかも
	変数のパターンも
* 関数の名前について
	parser とかそういう名前は conflict するので、もっとちゃんとした名前にする
	...M という名前を使ったときにとくに問題がある
* parser の呼び出しかたの改善
* papillon command は何も取らなければ filter とする。
	また、papillon [Input] や papillon [Input] -o [Output] の形も使う。
	そのうちに papillon -h や papillon --help も。
	より使いやすく GetOpt を使ってみるのもいいかもしれない。
* module 構造について
	Papillon -+-> some
                  |
	papillon -+
	とすることで、Papillon が papillonStr 等を export せずにすむ。
	ただし、papillonStr を export するのが役立つ可能性もあるので考えること

* {-# LANGUAGE ... #-} がないときにはそれを追加する

* source の見直し
	今の文法だと、source: SomeSource\n のようになっているが
	今後より複雑な文法を許容した場合において ';' で区切ったほうが良いかもしれない
* 非終端記号に大文字で始まるものも許すようにしようかな
* 左再帰の解決はどうしようかな
	pappy はこれにひどく時間がかかっていた
* ; を省略可能にしようかな

* Text/Papillon/Parser.hs を git から外す
	これは papillon 自体がある程度安定してから、となるだろう。

* cabal に examples directory を追加する
* cabal の description をもうすこしましにする
* homepage に example をのせる

* id is... 等の id をなくす
	左結合への変換の部分で ExpQ -> ExpQ ではなく (ExpQ -> ExpQ) -> ExpQ を
	使えばできる気がする
