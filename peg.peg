peg	= definition spaces peg
	/
;
definition
	= variable spaces [(== '=')] spaces selection
;
selection
	= expression spaces [(== '/')] spaces expression
	/ expression
;
expression
	= one spaces expression
	/
;
one	= variable / charlit
;
variable
	= small variable
	/ small
;
charlit	= [(== '\'')] small [(== '\'')]
	/ [(== '\'')] digit [(== '\'')]
	/ [(== '\'')] symbol1 [(== '\'')]
	/ [(== '\'')] [(== '\\')] symbol2 [(== '\'')]
;
small	= [isLower]
;
digit	= [isDigit]
;
symbol1	= [(`elem` "=/;+*() ")]
;
symbol2	= [(`elem` "\\'nt")]
;
spaces	= space spaces
	/ space
;
space	= [isSpace]
;
