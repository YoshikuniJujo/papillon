{-# LANGUAGE QuasiQuotes, TypeFamilies #-}

import Text.Papillon
import Data.Char

main :: IO ()
main = case something $ parse "335,287" of
	Right (n, _) -> print n
	Left _ -> putStrLn $ "not match"

[papillon|

something :: ([Int], [] Int)
	= n1:numbers ',' n2:numbers	{ (n1, n2) }
;
numbers :: [Int]
	= d:[isDigit d] ns:numbers	{ read [d] : ns }
	/				{ [] }
;

|]
