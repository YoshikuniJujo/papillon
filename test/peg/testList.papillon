{-# LANGUAGE QuasiQuotes, TypeFamilies #-}

import Text.Papillon

main :: IO ()
main = case other $ parse initialPos "something" of
	Right (r, _) -> print r
	Left (ParseError c m p _ _ _) -> putStrLn $ "not match " ++ show (c, m, p)

[papillon|

something :: Char
	= c		{ c }
;
other :: String
	= s:(c:something { c })* { s }
;

|]
