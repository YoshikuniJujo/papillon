{-# LANGUAGE QuasiQuotes, TypeFamilies #-}

import Text.Papillon

main :: IO ()
main = case runError $ something $ parse "abc\ndefn" of
	Right (r, _) -> print r
	Left _ -> putStrLn $ "not match"

true :: Bool
true = True

cons :: a -> [a] -> [a]
cons = (:)
emp :: [a]
emp = []

[papillon|

something :: String
	= !'\n' c s:something	{ cons c s }
	/				{ emp }
;

|]
