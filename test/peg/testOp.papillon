{-# LANGUAGE QuasiQuotes, TypeFamilies #-}

import Text.Papillon
import Data.Char

main :: IO ()
main = case runError $ add $ parse "3 + 5" of
	Right (r, _) -> print r
	Left _ -> putStrLn $ "error"

emp :: [a]
emp = []

[papillon|

add :: Int
	= l:digit ' ' '+' ' ' r:digit	{ l + r }
;
digit :: Int
	= d:[isDigit d]			{ read $ d : emp }
;

|]
